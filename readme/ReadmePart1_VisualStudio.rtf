{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid302\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww15060\viewh13320\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs28 \cf0 Create Your First Legacy C/C++ Test Project - Visual Studio
\b0\fs24 \
\
This paper describes how to integrate CppUTest based testing into your production code base using the Visual Studio environment.  I'll assume you are using Visual Studio 2010 in the instructions, but there are project files for VS2008 and VC6. As a reference, here are the other Visual Studio file extensions:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}VC6 file extensions (dsw, dsp)\
{\listtext	\'95	}VS2008 file extensions (sln, vcproj)\
{\listtext	\'95	}VS2010 file extensions (sln, vcxproj)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Install and build CppUTest\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Got to cpputest.org, and download the latest cpputest.  \
Follow the instructions for building it.\
Add an environment variable called CPPUTEST_HOME to your environment variables that points the home directory of CppUTest.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Unzip and build the starter project
\b0 \
Test files and production code files should all be kept in version control.  Assuming your code is already in version control (if not, why not?!), this section describes how to integrate testing into your source repository.\
\
\

\b Move starter test files to your production code repository\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Test files and production code files should all be kept in version control.  Assuming your code is already in version control (if not, why not?!), this section describes how to integrate testing into your source repository.\
\
Let's presume a directory structure like this:\
\
	ProductRepository\
		|-- include\
		|-- source\
\
Copy the following files to your ProductRepository\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}example-include\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}example-platform\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}example-src\
{\listtext	\'95	}readme\
{\listtext	\'95	}tests\
{\listtext	\'95	}vs-test-build\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
Add a directory called 'lib' to ProductSourceRepository\
\
You should now have this directory structure (assuming VS2010)\
\
	ProductSourceRepository\
		|-- include\
		|-- lib\
		|-- source\
		|--example-include\
		|--example-platform\
		|--example-src\
		|--readme\
		|--tests\
		|--vs-test-build\
\
In case you are worried about polluting your ProductSourceRepository, once you have \
your code under test, you can delete these directories:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}example-include\
{\listtext	\'95	}example-platform\
{\listtext	\'95	}example-src\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Test your initial setup
\b0 \
\
Rebuild all with Visual Studio.  You should see these test results in the console window:\
\
\pard\pardeftab720

\f1\fs22 \cf0 	compiling MyFirstTest.cpp\
	Linking MyProductTests_tests\
	Running MyProductTests_tests\
	.\
	OK (1 tests, 1 ran, 0 checks, 0 ignored, 0 filtered out, 0 ms)\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Cause the test to fail.  Open example.c, change the return result to 0.  You should see:\
\
\pard\pardeftab720

\f1\fs22 \cf0 	compiling MyFirstTest.cpp\
	Linking MyProductTests_tests\
	Running MyProductTests_tests\
\
	tests/MyFirstTest.cpp:28: error: Failure in TEST(MyCode, test1)\
		expected <1 0x1>\
		but was  <0 0x0>\
\
	.\
	Errors (1 failures, 1 tests, 1 ran, 0 checks, \
					0 ignored, 0 filtered out, 1 ms)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
Restore the example()'s return result to 1 and see tests pass again.\
\
Things that can go wrong:\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls4\ilvl0\cf0 {\listtext	\'95	}You build fails because it cannot find CppUTest includes\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural
\ls4\ilvl1\cf0 {\listtext	\uc0\u8259 	}Define the environment variable CPPUTEST_HOME to be equal to the location of CppUTest\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 To be continued\'85 See ReadmePart2.rtf
\b0 \
\
}